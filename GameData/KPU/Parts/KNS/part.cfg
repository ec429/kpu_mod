PART
{
	name = kerbinNavigation
	module = Part
	author = ec429 (code) | JDP and/or rkman (part)

	mesh = model.mu
	scale = 0.1
	specPower = 0.1
	rimFalloff = 3
	alphaCutoff = 0.5

	node_attach = 0.46, 0.0, 0.0, 1.0, 0.0, 0.0


	TechRequired = spaceExploration
	entryCost = 24000
	cost = 1200
	category = Control
	subcategory = 0
	title = Kerbin Navigation System
	manufacturer = Kybernetics Inc.
	description = Building the network of ground stations was expensive, but now this tiny receiver allows you to determine your position and velocity accurately as long as you stay within 300km of Kerbin.

	attachRules = 1,1,0,0,0

	mass = 0.03
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 8
	maxTemp = 1200

	MODULE
	{
		name = ModuleKpuSensorMaster
		electricRate = 0.75
		maxAltitude = 300000
		requireBody = Kerbin
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = altitude
		inherentRes = 100
		sensorUnit = m
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = longitude
		inherentRes = 0.25
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = latitude
		inherentRes = 0.25
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbSpeed
		inherentRes = 5
		sensorUnit = m/s
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbPeriapsis
		inherentRes = 100
		sensorUnit = m
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbApoapsis
		inherentRes = 100
		sensorUnit = m
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbInclination
		inherentRes = 0.25
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbANLongitude
		inherentRes = 0.25
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbPeriapsisLongitude
		inherentRes = 0.25
		sensorUnit = °
	}

	MODULE
	{
		name = ModuleKpuOrientation
		orbVertical = true
		srfPrograde = true // implies also srfRetrograde
		orbPrograde = true //   ,,     ,,  orbRetrograde
		customHP = true
		resolution = 0.5
	}
}
