PART
{
	name = longRangeNavigation
	module = Part
	author = ec429 (code) | JDP and/or rkman (part)

	mesh = model.mu
	scale = 0.1
	specPower = 0.1
	rimFalloff = 3
	alphaCutoff = 0.5

	node_attach = 0.46, 0.0, 0.0, 1.0, 0.0, 0.0


	TechRequired = electronics
	entryCost = 80000
	cost = 3600
	category = Control
	subcategory = 0
	title = "LORAN" Long Range Navigation
	manufacturer = Kerbal Instruments
	description = By using pulse signals instead of phase timing, this product gives navigational fixes as far out as 3Mm.

	attachRules = 1,1,0,0,0

	mass = 0.05
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 8
	maxTemp = 1200

	MODULE
	{
		name = ModuleKpuSensorMaster
		electricRate = 1.5
		maxAltitude = 3000000
		requireBody = Kerbin
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = altitude
		inherentRes = 40
		sensorUnit = m
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = longitude
		inherentRes = 0.1
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = latitude
		inherentRes = 0.1
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbSpeed
		inherentRes = 2
		sensorUnit = m/s
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbPeriapsis
		inherentRes = 100
		sensorUnit = m
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbApoapsis
		inherentRes = 40
		sensorUnit = m
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbInclination
		inherentRes = 0.1
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbANLongitude
		inherentRes = 0.1
		sensorUnit = °
	}
	MODULE
	{
		name = ModuleKpuSensor
		sensorType = orbPeriapsisLongitude
		inherentRes = 0.1
		sensorUnit = °
	}

	MODULE
	{
		name = ModuleKpuOrientation
		orbVertical = true
		srfPrograde = true // implies also srfRetrograde
		orbPrograde = true //   ,,     ,,  orbRetrograde
		customHP = true
		inherentRes = 0.1
	}
}
